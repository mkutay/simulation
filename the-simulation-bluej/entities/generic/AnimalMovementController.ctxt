#BlueJ class context
comment0.target=AnimalMovementController
comment0.text=\n\ Handles\ all\ movement\ for\ an\ animal.\n\ \n\ @author\ Mehmet\ Kutay\ Bozkurt\ and\ Anas\ Ahmed\n\ @version\ 1.0\n
comment1.params=animal\ position
comment1.target=AnimalMovementController(Animal,\ util.Vector)
comment1.text=\n\ Constructor\n\ @param\ animal\ The\ animal\ to\ control\ movement\ for.\n\ @param\ position\ The\ initial\ position\ of\ the\ animal.\n
comment10.params=
comment10.target=double\ getDistanceTravelled()
comment10.text=\n\ @return\ The\ distance\ travelled\ in\ the\ current\ frame\ relative\ to\ the\ last\n
comment2.params=field\ deltaTime
comment2.target=void\ wander(simulation.Field,\ double)
comment2.text=\n\ Move\ the\ entity\ around\ randomly,\ bouncing\ off\ of\ the\ edges.\n\ @param\ field\ The\ field\ to\ move\ the\ entity\ in.\n\ @param\ deltaTime\ The\ delta\ time.\n
comment3.params=entity\ deltaTime\ moveAwayFromEntity
comment3.target=void\ moveRelativeToEntity(Entity,\ double,\ boolean)
comment3.text=\n\ Moves\ to\ or\ away\ from\ another\ entity.\n\ @param\ entity\ The\ entity\ to\ move\ to.\n\ @param\ deltaTime\ Delta\ time.\n\ @param\ moveAwayFromEntity\ If\ true,\ run\ away\ from\ entity\ instead\ of\ towards\ entity.\n
comment4.params=entity\ deltaTime
comment4.target=void\ moveToEntity(Entity,\ double)
comment4.text=\n\ Move\ to\ an\ entity.\n\ @param\ entity\ The\ entity\ to\ move\ to.\n\ @param\ deltaTime\ Delta\ time.\n
comment5.params=entity\ deltaTime
comment5.target=void\ fleeFromEntity(Entity,\ double)
comment5.text=\n\ Flee\ from\ an\ entity.\ Move\ in\ the\ other\ direction\ from\ the\ entity.\n\ @param\ entity\ The\ entity\ to\ flee\ from.\n\ @param\ deltaTime\ Delta\ time.\n
comment6.params=entities\ deltaTime
comment6.target=boolean\ moveToNearestFood(java.util.List,\ double)
comment6.text=\n\ Moves\ to\ the\ nearest\ entity\ that\ this\ animal\ can\ eat,\ returns\ false\ if\ there\ are\ none\ nearby.\n\ @param\ entities\ The\ list\ of\ entities\ to\ search\ for\ food\ from.\n\ @param\ deltaTime\ The\ delta\ time.\n\ @return\ True\ if\ the\ entity\ is\ moving\ successfully,\ false\ if\ it\ is\ not\ moving.\n
comment7.params=entities\ deltaTime
comment7.target=boolean\ moveToNearestMate(java.util.List,\ double)
comment7.text=\n\ Moves\ to\ the\ nearest\ entity\ that\ this\ animal\ can\ breed\ with,\ returns\ false\ if\ there\ are\ none\ nearby.\n\ @param\ entities\ The\ list\ of\ entities\ to\ search\ for\ mates\ from.\n\ @param\ deltaTime\ The\ delta\ time.\n\ @return\ True\ if\ the\ entity\ is\ moving\ successfully,\ false\ if\ it\ is\ not\ moving.\n
comment8.params=entities\ condition
comment8.target=Entity\ getNearestEntity(java.util.List,\ java.util.function.Predicate)
comment8.text=\n\ Search\ a\ list\ of\ nearby\ entities\ and\ return\ the\ nearest\ entity\ satisfying\ the\ condition,\ or\ null.\n\ @implNote\ If\ there\ are\ multiple\ entities\ at\ the\ same\ distance,\ the\ first\ one\ in\ the\ list\ is\ returned.\n\ @param\ entities\ The\ list\ of\ nearby\ entities\ to\ search.\n\ @param\ condition\ The\ condition\ to\ determine\ what\ entities\ to\ move\ towards.\n\ @return\ The\ nearest\ entity\ satisfying\ the\ condition,\ null\ if\ none\ found.\n
comment9.params=lastPosition
comment9.target=void\ setLastPosition(util.Vector)
comment9.text=\n\ Set\ the\ last\ position\ of\ the\ animal.\n\ @param\ lastPosition\ The\ last\ position\ of\ the\ animal.\n
numComments=11
