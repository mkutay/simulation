#BlueJ class context
comment0.target=Entity
comment0.text=\n\ An\ abstract\ class\ that\ holds\ the\ properties\ of\ an\ entity.\n\ \n\ @author\ Anas\ Ahmed\ and\ Mehmet\ Kutay\ Bozkurt\n\ @version\ 1.0\n
comment1.params=genetics\ position
comment1.target=Entity(genetics.Genetics,\ util.Vector)
comment1.text=\n\ Constructor\ --\ Create\ a\ new\ entity\ with\ the\ given\ genetics\ and\ position.\n
comment10.params=field\ deltaTime
comment10.target=void\ update(simulation.Field,\ double)
comment10.text=\n\ Update\ the\ entity.\n
comment11.params=age
comment11.target=void\ setAge(double)
comment11.text=\n\ Set\ age\ of\ the\ entity.\n
comment12.params=
comment12.target=void\ setDead()
comment12.text=\n\ Set\ the\ entity\ as\ dead.\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\n\ @return\ A\ string\ representation\ of\ the\ entity.\n
comment14.params=position
comment14.target=void\ setPosition(util.Vector)
comment14.text=\n\ Set\ position\ of\ the\ entity.\n
comment15.params=
comment15.target=util.Vector\ getPosition()
comment16.params=
comment16.target=java.lang.String\ getName()
comment17.params=
comment17.target=int\ getSize()
comment18.params=
comment18.target=boolean\ isAlive()
comment2.params=entity
comment2.target=boolean\ isColliding(Entity)
comment2.text=\n\ Check\ if\ the\ entity\ is\ colliding\ with\ another\ entity.\n\ @param\ entity\ The\ entity\ to\ check\ collision\ with\ self.\n\ @return\ True\ if\ colliding\ with\ entity\ (uses\ circle\ hit\ box),\ false\ otherwise\ or\ if\ entitiy\ is\ itself.\n
comment3.params=field\ searchRadius
comment3.target=java.util.List\ searchNearbyEntities(simulation.Field,\ double)
comment3.text=\n\ Search\ for\ entities\ in\ the\ search\ radius,\ using\ a\ quadtree\ for\ optimisation.\n\ @param\ field\ The\ field\ that\ will\ be\ searched\ through.\n\ @param\ searchRadius\ The\ radius\ to\ search\ for\ entities.\n\ @return\ Returns\ all\ entities\ in\ the\ field\ in\ the\ radius,\ except\ itself.\n
comment4.params=field
comment4.target=void\ handleOvercrowding(simulation.Field)
comment4.text=\n\ Handles\ overcrowding\ of\ entities\ of\ the\ same\ species.\n\ Looks\ at\ the\ genetics\ of\ the\ species\ to\ determine\ overcrowding.\n\ @param\ field\ the\ field\ that\ will\ be\ searched\ through\ for\ nearby\ entities\n
comment5.params=entities
comment5.target=java.util.List\ getSameSpecies(java.util.List)
comment5.text=\n\ Get\ all\ entities\ of\ the\ same\ species\ from\ a\ list\ of\ entities.\n\ @param\ entities\ The\ list\ of\ entities\ to\ search\ through.\n\ @return\ A\ list\ of\ entities\ that\ are\ of\ the\ same\ species\ as\ this\ entity.\n
comment6.params=
comment6.target=double\ getCurrentVisualSize()
comment6.text=\n\ Is\ 10%\ of\ the\ size\ at\ birth,\ grows\ to\ 100%\ size\ at\ mature\ age.\ Minimum\ size\ is\ two.\n\ Purely\ used\ for\ visuals,\ not\ for\ simulation\ calculations\ (food\ values\ nor\ collision).\n\ @return\ The\ current\ visual\ size\ of\ the\ animal\ based\ on\ age.\n
comment7.params=deltaTime
comment7.target=void\ incrementAge(double)
comment7.text=\n\ Increment\ the\ age\ of\ the\ entity.\n\ Age\ increase\ rate\ is\ proportional\ to\ delta\ time.\n\ @param\ deltaTime\ The\ time\ passed\ since\ the\ last\ update.\n
comment8.params=
comment8.target=boolean\ canMultiply()
comment8.text=\n\ @return\ Whether\ the\ entity\ can\ reproduce\ or\ not,\ according\ to\ the\ mature\ age.\n
comment9.params=display\ scaleFactor
comment9.target=void\ draw(graphics.Display,\ double)
comment9.text=\n\ Draw\ the\ entity\ to\ a\ display.\n\ @param\ display\ The\ display\ to\ draw\ to.\n\ @param\ scaleFactor\ The\ field\ scale\ factor\ for\ the\ position\ and\ size\ (for\ scaling\ screen\ size\ and\ simulation\ size).\n
numComments=19
